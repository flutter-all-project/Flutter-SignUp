name: flutter_sign_in
description: 签到项目

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# App版本号
version: 1.0.0+1

# flutter sdk 版本号
environment:
  sdk: '>=2.16.1 <3.0.2'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  # http请求（中国封装）
  dio: ^4.0.6
  # 路由
  fluro: ^2.0.3
  # 屏幕自适应及适配不同屏幕 可以使用px(例如 750 * 812)
  flutter_screenutil: ^5.5.3+2
  # 状态管理
  provider: ^6.0.3
  # 有原生写法 https://book.flutterchina.club/chapter8/eventbus.html
  event_bus: ^2.0.0
  # 日志打印
  logger: ^1.1.0
  # 字节跳动 应用内调试工具
  flutter_ume: ^1.0.1
  flutter_ume_kit_ui: ^1.0.0
  flutter_ume_kit_device: ^1.0.0
  flutter_ume_kit_perf: ^1.0.0
  flutter_ume_kit_show_code: ^1.0.0
  flutter_ume_kit_console: ^1.0.0
  flutter_ume_kit_dio: ^1.0.0

  # 动画(官方)
  animations: ^2.0.3
  # 文字动画
  animated_text_kit: ^4.2.2
  # listview gridview 动画
  flutter_staggered_animations: ^1.0.0
  # 类似探探的滑动卡片
  flutter_tindercard: ^0.2.0
  # 粘液卡片动画
  slimy_card: ^1.0.4
  # 下滑刷新,下拉到底动画
  flutter_easyrefresh: ^2.2.1
  # 加载AE制作的炫酷动画
  lottie: ^1.3.0
  # toast
  fluttertoast: ^8.0.9
  # loading 动画
  flutter_easyloading: ^3.0.3

  # 简单数据持久化，清除数据就消失（官方）
  shared_preferences: ^2.0.15
  # 文件读取（官方）
  path_provider: ^2.0.10

  # 应用包信息查询（官方）
  package_info_plus: ^1.4.2
  # 设备信息及平台（官方）
  device_info_plus: ^3.2.3
  # 网络信息（官方）
  network_info_plus: ^2.1.3

  # 日期格式化
  date_format: ^2.0.6
  # 获取文件 mime类型
  mime: ^1.0.2
  # AES RSA 加密解密
  encrypt: ^5.0.1
  # SHA-256 加密解密 (官方)
  crypto: ^3.0.2
  # 错误收集到本地或服务器
  # sentry_flutter: ^7.4.2
  # 控制屏幕常亮 全平台
  wakelock: ^0.6.1+2
  # Google 官方文章
  # https://developer.android.com/training/permissions/requesting
  # https://developer.android.com/training/permissions/usage-notes
  # 可申请权限列表
  # https://pub.dev/documentation/permission_handler_platform_interface/latest/permission_handler_platform_interface/Permission-class.html#constants
  # 动态权限申请
  permission_handler: ^9.2.0
  # 仅安卓使用，可以返回桌面（调用安卓原生intent）
  android_intent_plus: ^3.1.7

  # 跳转链接 和 实现原生电话的拨打 (官方)
  url_launcher: ^6.1.2
  # URL Scheme 跳转app(浏览器跳当前自身app)
  uni_links: ^0.5.1
  # 指纹或面部识别 (官方)
  local_auth: ^2.1.0
  # 视频播放 (官方)
  video_player: ^2.4.2
  # webview
  webview_flutter: ^3.0.4
  # 本地通知
  flutter_local_notifications: ^9.5.3+1
  # 二维码扫描 同一个作者旧版本 qr_code_scanner: ^0.7.0
  mobile_scanner:
    ^2.0.0
    # web 使用
    # git:  https://github.com/juliansteenbakker/mobile_scanner.git
    # git:
    #   url: https://github.com/juliansteenbakker/mobile_scanner.git
    #   ref: master
  # android ios 的升级插件
  # r_upgrade: ^0.3.8+2

  flutter:
    sdk: flutter

  # widget的国际化支持，默认是英文
  flutter_localizations:
    sdk: flutter
  intl: ^0.17.0

  # 添加Cupertino图标字体到你的应用程序。
  # 使用CupertinoIcons类的iOS风格图标
  cupertino_icons: ^1.0.4

dev_dependencies:
  # 图标生成 (官方)
  # flutter_launcher_icons: '^0.9.2' # 用的最多
  # 平台多,并且是在flutter_launcher_icons之上的版本 用法差不多
  # 只需要最大尺寸 1024 即可
  icons_launcher: ^1.1.9
  # 自动生成原生启动页
  flutter_native_splash: ^2.2.2
  # 处理跨域工具包
  shelf: ^1.3.0
  shelf_proxy: ^1.0.1
  # 修改 bundleId 和 app名
  rename: ^2.0.1

  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.1

flutter_icons:
  ios: true
  android: true
  web: true
  macos: false
  windows: false
  linux: false
  image_path: 'assets/logo.png'

# 填充对应的颜色，让图片居中以显示不被拉伸
flutter_native_splash:
  # 默认背景色
  color: '#ffffff'
  image: 'assets/splash.png'
  # branding: assets/setting-icon/about.png # 指定logo
  # 黑暗模式背景色
  color_dark: #000000
  image_dark: 'assets/splash.png'
  # branding_dark: assets/setting-icon/about.png
  # 可以使用 bottom, bottomRight, bottomLeft
  branding_mode: bottom
  # 安卓12是logo形式，不能全屏进行展示
  android_12:
    image: assets/logo.png
    # 这里只是透明 logo 的背景色 是个正方形, 需要搭配 color 设置背景色
    icon_background_color: '#ffffff'
    image_dark: assets/logo.png
    icon_background_color_dark: '#121212'
  ardroid: true
  ios: true
  web: true
  # 在android闪屏页中的位置,值有 bottom, center, center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal, fill_vertical, left, right, start, top
  # android:gravity官网 https://developer.android.com/reference/android/view/Gravity#FILL
  android_gravity: fill
  # 在iOS闪屏页中的位置,值有 scaleToFill, scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight, bottomLeft, bottomRight
  ios_content_mode: scaleToFill
  # 在web页屏幕中的位置,值有 center, contain, stretch, cover
  web_image_mode: cover
  # image/image_dark是否是全屏模式 值为true/false
  fullscreen: true

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# The following section is specific to Flutter.
flutter:
  # 开启自定义的国际化
  generate: true
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/splash.png
    - assets/logo.png
    - assets/state-icon/
    - assets/lottie/
    - assets/setting-icon/
    - assets/ios/
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.
  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages
  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # 字体支持格式 .ttf .otf .ttc
  fonts:
    - family: Ping fang SC
      fonts:
        - asset: assets/font/Ping_fang_SC/pingfangsc-medium.otf
          weight: 400
        # - asset: assets/font/Ping_fang_SC/pingfangsc-light.otf
        # - asset: assets/font/Ping_fang_SC/pingfangsc-thin.otf
        # - asset: assets/font/Ping_fang_SC/pingfangsc-ultralight.otf
        # style: italic
    # - family: HarmonyOS_Sans
    #   fonts:
    #     - asset: assets/font/HarmonyOS_Sans/HarmonyOS_Sans_Medium.ttf
    #     - asset: assets/font/HarmonyOS_Sans/HarmonyOS_Sans_Regular.ttf
    #       weight: 400
    #     - asset: assets/font/HarmonyOS_Sans/HarmonyOS_Sans_Bold.ttf
    #       weight: 500
    #       # style: italic
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
flutter_intl:
  enabled: true
